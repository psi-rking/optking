name: CI

on: [push, pull_request]

jobs:
  build:

    # prevent actions from running on both the push to the PR and PR
    # only run actions on PRs originating from a fork
    if:
      github.event_name == 'push' || github.event.pull_request.head.repo.full_name !=
      github.repository

    runs-on: ubuntu-latest
    strategy:
      matrix:
        cfg:
          - conda-env: base
            python-version: 3.8
          - conda-env: base
            python-version: 3.9
          - conda-env: base
            python-version: "3.10"
    env:
      PYVER: ${{ matrix.cfg.python-version }}
      CONDA_ENV: ${{ matrix.cfg.conda-env }}

    steps:
    - uses: actions/checkout@v2

    - name: Create Environment
      uses: conda-incubator/setup-miniconda@v2
      with:
        installer-url: https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
        activate-environment: test
        environment-file: devtools/conda-envs/${{ matrix.cfg.conda-env }}.yaml
        python-version: ${{ matrix.cfg.python-version }}
        auto-activate-base: false

    - name: Setup Information
      shell: bash -l {0}
      run: |
        uname -a
        df -h
        ulimit -a
        echo $CONDA
        echo $(which conda)
        conda --version

    - name: Install
      shell: bash -l {0}
      run: |
        python -m pip install . --no-deps
    - name: Environment Information
      shell: bash -l {0}
      run: |
        conda list --show-channel-urls
    - name: PyTest
      shell: bash -l {0}
      run: |
        pytest -rws -v -m "not long" --cov=optking --color=yes --cov-report=xml optking/
    - name: CodeCov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
